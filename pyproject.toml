[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pie-datasets"
version = "0.11.0"
description = "Building scripts for Python-IE Datasets"
authors = ["Arne Binder <arne.binder@dfki.de>"]
readme = "README.md"
homepage = "https://github.com/arnebinder/pie-datasets"
repository = "https://github.com/arnebinder/pie-datasets"
packages = [
    { include = "pie_datasets", from = "src" },
]
classifiers = [
    "Framework :: Pytest",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
]
[tool.poetry.urls]
"Bug Tracker" = "https://github.com/arnebinder/pie-datasets/issues"
"Changelog" = "https://github.com/arnebinder/pie-datasets/releases"

[tool.poetry.dependencies]
python = "^3.9"
pie-core = ">=0.2.0,<0.4.0"
# >=3.0.2 because of github.com/huggingface/datasets/pull/7234 (otherwise Brat datasets break)
datasets = ">=3.0.2,<3.0.3"
# should not be necessary, but see https://github.com/ArneBinder/pie-datasets/issues/164
huggingface-hub = ">=0.24.0"
# <2.0.0 because otherwise datasets breaks
#numpy = "<2.0.0"
# this was manually added because we get a conflict with pyarrow otherwise
#pyarrow = "^13"
# pin to version below 2023.9.0 because that one causes problems when using load_dataset with local files (e.g. json)
#fsspec = "<2023.9.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pie-documents = ">=0.1.0,<0.2.0"
networkx = "^3"  # for dataset tests that use SpansViaRelationMerger during conversion (sciarg)
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pre-commit = "^3.4.0"

[[tool.poetry.source]]
name = "pre-release"
url = "https://test.pypi.org/simple/"
priority = "explicit"


[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]
